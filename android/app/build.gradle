plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace "com.example.dts"
    compileSdkVersion 34 // Ensure it matches your Flutter project
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.dts" // Replace with your unique app ID
        minSdkVersion 21 // Minimum SDK version for Flutter apps
        targetSdkVersion 34 // Match the latest supported Android SDK version
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            storeFile file('/Users/nazarovbahodur/my-release-key.jks') // Update with the correct keystore path
            storePassword 'MySecurePass123!' // Keystore password
            keyAlias 'my-key-alias' // Replace with your alias
            keyPassword 'MySecurePass123!' // Key password
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true // Enable ProGuard for release builds
            shrinkResources true // Shrink resources for smaller APK size
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // Add any additional dependencies if required
}

// Automatically set version code and version name from local.properties
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    def localProperties = new Properties()
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }

    def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
    if (flutterVersionCode == null) {
        flutterVersionCode = '1'
    }

    def flutterVersionName = localProperties.getProperty('flutter.versionName')
    if (flutterVersionName == null) {
        flutterVersionName = '1.0'
    }
}
